name: CI

on:
  push:
    branches:
      - '**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-build.[0-9]+'

env:
  GOPRIVATE: github.com/pivotal,github.com/vmware-tanzu/*
  TOKEN: ${{ secrets.PAT }}
  USERNAME: ${{ secrets.PAT_USER }}
jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
    - uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.ACC_CONTROLLER_DEPLOY_KEY }}
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-go@v4.0.0
      with:
        go-version: 1.19.x
    - name: Setup
      run: |
        git config --global url."https://${USERNAME}:${TOKEN}@github.com".insteadOf "https://github.com"
        kind create cluster
    - name: Install tanzu cli
      run: |
        TANZU_VERSION=$(cat TANZU_VERSION)
        curl -L -o tanzu-cli-linux-amd64.tar.gz https://github.com/vmware-tanzu/tanzu-cli/releases/download/${TANZU_VERSION}/tanzu-cli-linux-amd64.tar.gz && \
          mkdir -p tanzu && \
          tar xvzf tanzu-cli-linux-amd64.tar.gz -C tanzu
        sudo install tanzu/${TANZU_VERSION}/tanzu-cli-linux_amd64 /usr/local/bin/tanzu
        tanzu ceip-participation set false
        tanzu init
        tanzu version
        tanzu plugin install builder --version ${TANZU_VERSION} --target global
        tanzu plugin install test --version ${TANZU_VERSION} --target global
        tanzu plugin list
    - name: Test
      run: | 
        make test
    - name: Build plugin and create artifact
      run: |
        tanzu version
        tanzu plugin list
        make plugin-build
    - name: Install plugin
      run: tanzu plugin install accelerator -t kubernetes --local ./artifacts/plugins/linux/amd64 --version $(cat BUILD_VERSION)
    - name: Verify docs
      run: |
        rm -rf docs
        tanzu accelerator docs --directory docs
        git diff --exit-code docs
    - uses: actions/upload-artifact@v2
      with:
        name: tanzu-accelerator-plugin.tar.gz
        path: artifacts/plugin_bundle.tar.gz
        retention-days: 1

  e2e:
    needs: unit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s:
        - kind
    env:
      ACC_SERVER_URL: http://localhost:8877
      TANZUNET_ROBOT: ${{ secrets.TANZUNET_ROBOT }}
      TANZUNET_PASS: ${{ secrets.TANZUNET_PASS }}
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: carvel-dev/setup-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Download plugin bundle
      uses: actions/download-artifact@v2
      with:
        name: tanzu-accelerator-plugin.tar.gz
    - name: Install tanzu cli
      run: |
        TANZU_VERSION=$(cat TANZU_VERSION)
        curl -L -o tanzu-cli-linux-amd64.tar.gz https://github.com/vmware-tanzu/tanzu-cli/releases/download/${TANZU_VERSION}/tanzu-cli-linux-amd64.tar.gz && \
          mkdir -p tanzu && \
          tar xvzf tanzu-cli-linux-amd64.tar.gz -C tanzu
        sudo install tanzu/${TANZU_VERSION}/tanzu-cli-linux_amd64 /usr/local/bin/tanzu
        tanzu ceip-participation set false
        tanzu init
        tanzu version
        tanzu plugin list
    - name: Build Version
      run: echo "BUILD_VERSION=$(cat BUILD_VERSION)" >> $GITHUB_ENV
    - name: Install CLI
      run: |
        set -o errexit
        set -o nounset
        set -o pipefail

        mkdir -p artifacts/plugins
        tar -xvzf plugin_bundle.tar.gz -C artifacts/plugins
        tanzu plugin install accelerator -t kubernetes --local ./artifacts/plugins/linux/amd64 --version ${{env.BUILD_VERSION}}
    - name: Create Context
      run: |
        make create-context
    - name: Test CLI commands
      run: |
        set -o errexit
        set -o nounset
        set -o pipefail

        echo "##[group]List Accelerators"
          tanzu accelerator list
        echo "##[endgroup]"
        echo "##[group]Create Accelerator"
          tanzu accelerator create test-accelerator --git-repository http://www.test.com
        echo "##[endgroup]"
        echo "##[group]Get Accelerator"
          tanzu accelerator get spring-petclinic
        echo "##[endgroup]"
        echo "##[group]Generate Accelerator"
          tanzu accelerator generate spring-petclinic
        echo "##[endgroup]"
        echo "##[group]Update Accelerator"
          tanzu accelerator update test-accelerator --description "Lorem Ipsum"
        echo "##[endgroup]"
        echo "##[group]Delete Accelerator"
          tanzu accelerator delete test-accelerator
        echo "##[endgroup]"
      if: always()
      continue-on-error: true
    - name: Cleanup
      run: |
        rm spring-petclinic.zip
        kind delete cluster
      if: always()

  release:
    needs:
    - unit
    - e2e
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Draft release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: true
    - name: Download staged CLI binaries
      uses: actions/download-artifact@v2.0.10
      with:
        name: tanzu-accelerator-plugin.tar.gz
    - name: Rename artifact
      run: mv plugin_bundle.tar.gz tanzu-accelerator-plugin.tar.gz
    - name: Upload CLI release
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tanzu-accelerator-plugin.tar.gz
        asset_name: tanzu-accelerator-plugin-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip

  srp:
    needs: e2e
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: pivotal-cf/srp-helper-action/install@v2
    - uses: pivotal-cf/srp-helper-action/init@v2
      with:
        client-id: ${{ secrets.SRP_CLIENT_ID }}
        client-secret: ${{ secrets.SRP_CLIENT_SECRET }}
    - uses: pivotal-cf/srp-helper-action/collect@v2
      with:
        git-repos: .
    - uses: pivotal-cf/srp-helper-action/submit@v2
