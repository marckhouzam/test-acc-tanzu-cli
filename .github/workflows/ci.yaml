name: CI

on:
  push:
    branches:
    - '**'
    tags:
    - '**'

env:
  GOPRIVATE: github.com/pivotal,github.com/vmware-tanzu-private/*,github.com/vmware-tanzu/tanzu-framework
  TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
jobs:
  unit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: actions/setup-go@v2.1.3
      with:
        go-version: 1.16.x
    - name: Setup
      run: |
        git config --global url."https://app-accelerator-build:${TOKEN}@github.com".insteadOf "https://github.com"
        kind create cluster
    - name: Install tanzu cli
      run: |
        curl -o tanzu https://storage.googleapis.com/tanzu-cli/artifacts/core/latest/tanzu-core-linux_amd64 && \
          sudo mv tanzu /usr/local/bin/tanzu && \
          chmod +x /usr/local/bin/tanzu
        env
        tanzu init
        tanzu plugin repo add -b tanzu-cli-admin-plugins -n admin -p artifacts-admin
        tanzu plugin install builder
        tanzu plugin install test
        tanzu plugin list
    - name: Test
      run: make test
    - name: Create Artifact
      run: make create-artifact
    - uses: actions/upload-artifact@v2
      with:
        name: tanzu-accelerator-plugin.tar.gz
        path: tanzu-accelerator-plugin.tar.gz
        retention-days: 1

  e2e:    
    needs: unit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s:
        - 1.21.1
    env:
      ACC_SERVER_URL: http://localhost:8877
      TANZUNET_ROBOT: ${{ secrets.TANZUNET_ROBOT }}
      TANZUNET_PASS: ${{ secrets.TANZUNET_PASS }}
    steps:
    - uses: actions/checkout@v2.3.4
    - uses: vmware-tanzu/carvel-setup-action@v1
    - name: Download plugin bundle
      uses: actions/download-artifact@v2
      with:
        name: tanzu-accelerator-plugin.tar.gz
    - name: Install tanzu cli
      run: |
        curl -o tanzu https://storage.googleapis.com/tanzu-cli/artifacts/core/latest/tanzu-core-linux_amd64 && \
          sudo mv tanzu /usr/local/bin/tanzu && \
          chmod +x /usr/local/bin/tanzu
        env
        tanzu init
    - name: Build Version
      run: echo "BUILD_VERSION=$(cat BUILD_VERSION)" >> $GITHUB_ENV          
    - name: Install CLI
      run: |
        set -o errexit
        set -o nounset
        set -o pipefail

        tar -xvf tanzu-accelerator-plugin.tar.gz
        tanzu plugin install accelerator --local ./artifacts --version ${{env.BUILD_VERSION}}
    - name: Create Context
      run: |        
        make create-context
    - name: Test CLI commands
      run: |
        set -o errexit
        set -o nounset
        set -o pipefail

        echo "##[group]List Accelerators"
          tanzu accelerator list
        echo "##[endgroup]"
        echo "##[group]Create Accelerator"
          tanzu accelerator create test-accelerator --git-repository http://www.test.com
        echo "##[endgroup]"
        echo "##[group]Get Acceletor"
          tanzu accelerator get spring-petclinic
        echo "##[endgroup]"
        echo "##[group]Update Accelerator"
          tanzu accelerator update spring-petclinic --description "Lorem Ipsum"
        echo "##[endgroup]"
        echo "##[group]Generate Accelerator"
          tanzu accelerator generate spring-petclinic
        echo "##[endgroup]"
        echo "##[group]Delete Accelerator"
          tanzu accelerator delete test-accelerator
        echo "##[endgroup]"
      if: always()
      continue-on-error: true
    - name: Cleanup
      run: | 
        rm spring-petclinic.zip
        kind delete cluster
      if: always()
    
  release:
    needs:
    - unit
    - e2e
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Draft release
      id: create_release
      uses: actions/create-release@v1.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.get_version.outputs.VERSION }}
        draft: true
    - name: Download staged CLI binaries
      uses: actions/download-artifact@v2.0.10
      with:
        name: tanzu-accelerator-plugin.tar.gz
    - name: Upload CLI release
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: tanzu-accelerator-plugin.tar.gz
        asset_name: tanzu-accelerator-plugin-${{ steps.get_version.outputs.VERSION }}.tar.gz
        asset_content_type: application/gzip
